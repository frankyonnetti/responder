// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
  font-size: ($sizeValue * 16) * 1px;
  font-size: $sizeValue * 1rem;
}

// element-invisible as defined by http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// @mixin clearfix {
//   *zoom: 1;
//   &:before,
//   &:after {
//     display: table;
//     content: "";
//     line-height: 0;
//   }
//   &:after {
//     clear: both;
//   }
// }

// Opacity mixin
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

// background-size
@mixin background-size($bgsize) { // cover, contain, size
  -webkit-background-size: $bgsize;
  -moz-background-size: $bgsize;
  -o-background-size: $bgsize;
  background-size: $bgsize;
}

// Convert hex to rgba
@mixin background-rgba($color, $opacity: 0.3) {
  background-color: $color; // fallback
  background-color: rgba($color, $opacity);
}

// transitions
@mixin transition($transitions) {
  -webkit-transition: $transitions;
  -moz-transition: $transitions;
  transition: $transitions;
}

// transform
@mixin transform($transforms) {
  -webkit-transform: $transforms;
  -moz-transform: $transforms;
  -ms-transform: $transforms;
  transform: $transforms;
}
// transform rotate
@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}
// transform scale
@mixin scale($scale) {
   @include transform(scale($scale));
}
// transform scale
@mixin scale3d($x, $y, $z) {
   @include transform(scale3d($x, $y, $z));
}
// transform translate
@mixin translate($x, $y) {
   @include transform(translate($x, $y));
}
// transform skew
@mixin skew($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}
// transform origin
@mixin transform-origin($origin) {
  -webkit-transform-origin: $origin;
  -moz-transform-origin: $origin;
  -ms-transform-origin: $origin;
  transform-origin: $origin;
}

// vertical gradient
// @include gradient(#top_color, #bottom_color);
@mixin gradient($from, $to) {
  background-color: $from;
  background-image: -moz-linear-gradient(top, $from, $to);
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from($from), to($to));
  background-image: -webkit-linear-gradient(top, $from, $to);
  background-image: -o-linear-gradient(top, $from, $to);
  background-image: linear-gradient(to bottom, $from, $to);
  background-repeat: repeat-x;
}

// horizontal gradient
// @include gradient(#top_color, #bottom_color);
@mixin gradient_horizontal($from, $to) {
  background-color: $from;
  background-image: -moz-linear-gradient(left, $from, $to);
  background-image: -webkit-gradient(linear, 0 0, 100% 0, from($from), to($to));
  background-image: -webkit-linear-gradient(left, $from, $to);
  background-image: -o-linear-gradient(left, $from, $to);
  background-image: linear-gradient(to right, $from, $to);
  background-repeat: repeat-y;
}

// diagonal gradient
// @include gradient(#top_color, #bottom_color, 0deg);
@mixin gradient_diagonal($from, $to, $deg) {
  background: $from;
  background: -moz-linear-gradient($deg, $from 0%, $to 100%);
  background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, $from), color-stop(100%, $to));
  background: -webkit-linear-gradient($deg, $from 0%, $to 100%);
  background: -o-linear-gradient($deg, $from 0%, $to 100%);
  background: -ms-linear-gradient($deg, $from 0%, $to 100%);
  background: linear-gradient($deg, $from 0%, $to 100%);
}

// Media Queries
// http://css-tricks.com/naming-media-queries
@mixin bp($point) {

  @if $point == min601 {
    @media (min-width: 601px)  { @content; }
  }
  @else if $point == min769 {
    @media (min-width: 769px)  { @content; }
  }
  @else if $point == min881 {
    @media (min-width: 881px) { @content; }
  }
  @else if $point == min1025 {
    @media (min-width: 1025px)  { @content; }
  }
  @else if $point == min1440 {
    @media (min-width: 1440px)  { @content; }
  }

  // mobile
  @else if $point == portrait {
    @media only screen and (orientation:portrait) { @content; }
  }
  @else if $point == landscape {
    @media only screen and (orientation:landscape) { @content; }
  }
}

// Easy retina-ready images
// signalvnoise.com/posts/3271-easy-retina-ready-images-using-scss
// scss - @include image-2x("NAME@2x.png", 0px, 0px); // width & height same as 1x image
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

// webform select - add to parent tag of input.select
@mixin select-pulldown {
  width: 210px;
  height: 30px;
  overflow: hidden;
  border: 1px solid #d7d7d7;
  @include border-radius(2px);
  background: #fff url(../images/forms/select-bg.png) no-repeat 0 0;
  @include image-2x("../images/forms/select-bg@2x.png", 210px, 30px);
  @include box-shadow(0 1px 2px rgba(0,0,0,0.03));
  display: block;

  select {
    font-size: 15px;
    line-height: 20px;
    text-transform: capitalize;
    background: transparent;
    border: none;
    width: 234px;
    max-width: inherit;
    height: 30px;
    margin: 0;
    padding: 5px;
    cursor: pointer;
    -webkit-appearance: none;
    -webkit-tap-highlight-color: transparent;

    &:focus {
      border: none;
      outline: none;
    }
  }
}

//animation
@mixin animation($name, $duration, $timing, $delay, $count, $direction) {
  -webkit-animation-name: $name;
     -moz-animation-name: $name;
          animation-name: $name;
  -webkit-animation-duration: $duration; // 2s - how long it plays
     -moz-animation-duration: $duration;
          animation-duration: $duration;
  -webkit-animation-timing-function: $timing; // linear, ease, cubic-bezier
     -moz-animation-timing-function: $timing;
          animation-timing-function: $timing;
  -webkit-animation-delay: $delay; // 0.2s - time before it should start
     -moz-animation-delay: $delay;
          animation-delay: $delay;
  -webkit-animation-iteration-count: $count; // infinite, 7 - how may times
     -moz-animation-iteration-count: $count;
          animation-iteration-count: $count;
  -webkit-animation-direction: $direction; // alternate, reverse, normal;
     -moz-animation-direction: $direction;
          animation-direction: $direction;
}

@mixin keyframes($name) {
  @-webkit-keyframes $name { @content; }
     @-moz-keyframes $name { @content; }
      @-ms-keyframes $name { @content; }
          @keyframes $name { @content; }
}

// Filter
// blur, brightness, contras, drop-shadow, grayscale,
// hue-rotate, invert, opacity, saturate, sepia
// css-tricks.com/almanac/properties/f/filter
@mixin filter($effects) {
  -webkit-filter: $effects;
  filter: $effects;
}

// .scroller {
//   &::-webkit-scrollbar {
//     background-color: #0a0a0a;
//     border-radius: 17px;
//     width: 9px;
//     height: 9px;
//   }
//   &::-webkit-scrollbar-button {
//   }
//   &::-webkit-scrollbar-track {
//   }
//   &::-webkit-scrollbar-track-piece {
//   }
//   &::-webkit-scrollbar-thumb {
//     background-color: #404040;
//     border-radius: 17px;
//   }
//   &::-webkit-scrollbar-thumb:hover {
//     background-color: #666666;
//   }
//   &::-webkit-scrollbar-thumb:active {
//     background-color: #555;
//   }
//   &::-webkit-scrollbar-corner {
//     background-color: transparent;
//   }
//   &::-webkit-resizer {
//   }
// }
